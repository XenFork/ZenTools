import crafttweaker.block.IBlockState;
import crafttweaker.block.IMaterial;
import crafttweaker.block.IMobilityFlag;
import crafttweaker.entity.IEntity;
import crafttweaker.player.IPlayer;
import crafttweaker.world.IBlockAccess;
import crafttweaker.world.IBlockPos;
import crafttweaker.world.IFacing;
import crafttweaker.world.IWorld;

zenClass IBlockProperties {
    val normalCube as bool;
    val useNeighborBrightness as bool;
    val blockNormalCube as bool;
    val hasCustomBreakingProgress as bool;
    val causesSuffocation as bool;
    val mobilityFlag as IMobilityFlag;
    val canProvidePower as bool;
    val material as IMaterial;
    val fullBlock as bool;
    val fullCube as bool;
    val opaqueCube as bool;
    
    function getLightValue(access as IBlockAccess, pos as IBlockPos) as int;
    
    function getLightOpacity(access as IBlockAccess, pos as IBlockPos) as int;
    
    function isSideSolid(access as IBlockAccess, pos as IBlockPos, facing as IFacing) as bool;
    
    function doesSideBlockRendering(access as IBlockAccess, pos as IBlockPos, facing as IFacing) as bool;
    
    function canEntitySpawn(entity as IEntity) as bool;
    
    function getBlockHardness(world as IWorld, pos as IBlockPos) as float;
    
    function getPlayerRelativeBlockHardness(player as IPlayer, world as IWorld, pos as IBlockPos) as float;
    
    function getComparatorInputOverride(world as IWorld, pos as IBlockPos) as int;
    
    function getStrongPower(access as IBlockAccess, pos as IBlockPos, facing as IFacing) as int;
    
    function getWeakPower(access as IBlockAccess, pos as IBlockPos, facing as IFacing) as int;
    
    function getActualState(access as IBlockAccess, pos as IBlockPos) as IBlockState;
}