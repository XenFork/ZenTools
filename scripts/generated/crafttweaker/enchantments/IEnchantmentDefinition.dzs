import crafttweaker.enchantments.IEnchantment;
import crafttweaker.enchantments.IEnchantmentDefinition;
import crafttweaker.item.IItemStack;

zenClass IEnchantmentDefinition {
    var name as string;
    val id as int;
    val registryName as string;
    val minLevel as int;
    val isAllowedOnBooks as bool;
    val isTreasureEnchantment as bool;
    val maxLevel as int;
    val isCurse as bool;
    
    #hidden
    #operator COMPARE
    function compare(other as IEnchantmentDefinition) as int;
    
    function isCompatibleWith(other as IEnchantmentDefinition) as bool;
    
    function canApplyAtEnchantmentTable(itemStack as IItemStack) as bool;
    
    function getMaxEnchantability(enchantmentLevel as int) as int;
    
    function getMinEnchantability(enchantmentLevel as int) as int;
    
    function getTranslatedName(enchantmentLevel as int) as string;
    
    function canApply(itemStack as IItemStack) as bool;
    
    #operator MUL
    function makeEnchantment(level as int) as IEnchantment;
}